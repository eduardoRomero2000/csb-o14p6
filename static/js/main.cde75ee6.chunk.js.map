{"version":3,"sources":["utils/firebase.js","components/NavBar/index.jsx","components/Wrapper/index.jsx","pages/Home/index.jsx","utils/palette.js","redux/actions/_auth_actions.js","pages/Login/index.jsx","pages/HistoryCodes/historyCodes.jsx","pages/Register/register.jsx","pages/Account/Account.jsx","components/Wrapper/Loader.jsx","utils/history.js","App.jsx","redux/reducers/_auth_reducer.js","redux/index.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","storage","firebaseAuth","auth","List","styled","ul","Navbar","history","useHistory","goTo","path","push","logOut","a","signOut","Error","AppBar","Toolbar","onClick","NavBarContainer","main","Wrapper","props","children","ContainerMain","Home","type","palette","primaryColors","secondaryColor","greenColor","yellowColor","grayColor","blueColor","white","authTypes","form","HistoryCodes","Account","useState","color","setColor","text","setText","className","value","fgColor","bgColor","level","title","onChange","hex","e","target","Loader","createBrowserHistory","App","loader","state","setState","useEffect","setTimeout","exact","component","INITIAL_STATE","user","status","action","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Boolean","location","hostname","match","store","createStore","combineReducers","authReducer","applyMiddleware","thunk","GlobalStyle","createGlobalStyle","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kRAeAA,IAASC,cATM,CACbC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKeP,IAASQ,YACVR,IAASS,UADzB,I,kBAEMC,EAAeV,IAASW,O,OCe/BC,EAAOC,IAAOC,GAAV,yRAgBKC,EA5CA,WACb,IAAMC,EAAUC,cAEVC,EAAO,SAACC,GACZH,EAAQI,KAAR,WAAiBD,KAEbE,EAAM,uCAAG,sBAAAC,EAAA,+EAELZ,EAAaa,UAFR,OAGXP,EAAQI,KAAK,KAHF,qDAKL,IAAII,MAAM,+BALL,wDAAH,qDAQZ,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACd,EAAD,WACE,oBAAIe,QAAS,kBAAMT,EAAK,SAAxB,6BACA,oBAAIS,QAAS,kBAAMT,EAAK,iBAAxB,kCACA,oBAAIS,QAAS,kBAAMT,EAAK,iBAAxB,+BACA,oBAAIS,QAASN,EAAb,sCCZJO,EAAkBf,IAAOgB,KAAV,6CAINC,EAfC,SAACC,GACf,OACE,qCACE,cAACH,EAAD,UACE,cAAC,EAAD,MAEDG,EAAMC,aCSPC,EAAgBpB,IAAOgB,KAAV,yPAcJK,EA7BF,WAEX,OACE,mCACE,cAAC,EAAD,UACE,cAACD,EAAD,UACE,wBAAQE,KAAK,SAASR,QALM,aAK5B,iD,eCAKS,EAVC,CACdC,cAAe,UACfC,eAAgB,UAChBC,WAAY,UACZC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,MAAO,Q,QCPIC,EACJ,qB,GCkHa/B,IAAOgB,KAAV,+IAQNhB,IAAOgC,KAAV,+kBAyBQT,EAAQM,UACbN,EAAQO,O,cC1ING,GCsGOjC,IAAOgB,KAAV,+IAQNhB,IAAOgC,KAAV,+kBAyBQT,EAAQM,UACbN,EAAQO,ODhJA,WACnB,OACE,cAAC,EAAD,UACE,mD,2BEqCAV,EAAgBpB,IAAOgB,KAAV,yzBA2CJkB,EAhFC,WACd,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAQA,OACE,mCACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,gDACA,sBAAKC,UAAU,mBAAf,UACE,kCACE,cAAC,IAAD,CACEC,MAAOH,EACPI,QAASN,EACTO,QAAQ,OACRC,MAAM,IACNC,MAAM,cAGV,kCACE,cAAC,IAAD,CAAcT,MAAOA,EAAOU,SAtBpB,SAACV,GACnBC,EAASD,EAAMW,aAwBT,uBAAOzB,KAAK,OAAOwB,SAtBR,SAACE,GAClBT,EAAQS,EAAEC,OAAOR,QAqB8BA,MAAOH,IAChD,wBAAQhB,KAAK,SAAb,gCCxBJF,EAAgBpB,IAAOgB,KAAV,oHAMJkC,EAdA,WACb,OACE,cAAC,EAAD,UACE,cAAC,YAAD,O,SCLSC,cCwCAC,I,EAAAA,EA/Bf,WACE,MAA0BjB,mBAAS,CACjCkB,QAAQ,IADV,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACRC,YAAW,WACTF,EAAS,CACPF,QAAQ,MAET,OACF,IAGD,mCACE,cAAC,IAAD,UACGC,EAAMD,OACL,cAAC,EAAD,IAEA,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,OAAK,EAACpD,KAAK,IAAIqD,UAAWtC,IACjC,cAAC,IAAD,CAAOqC,OAAK,EAACpD,KAAK,gBAAgBqD,UAAW1B,IAC7C,cAAC,IAAD,CAAOyB,OAAK,EAACpD,KAAK,gBAAgBqD,UAAWzB,c,iBChCrD0B,EAAgB,CACpBC,KAAM,CACJC,QAAQ,IAIG,aAAoC,IAAnCR,EAAkC,uDAA1BM,EAAeG,EAAW,uCAChD,OAAQA,EAAOzC,OACRS,EACI,2BACFuB,GADL,IAEEO,KAAME,EAAOC,UAGRV,GCZPW,GAAmBC,OAAOC,sCAAwCC,ICQpDC,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MACvB,2DCVN,IAAMC,GFDUC,YACZC,YAAgB,CACd7E,KAAM8E,IAERX,GAAiBY,YAAgBC,OED/BC,GAAcC,YAAH,yHAUXC,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,eAAC,IAAD,CAAUZ,MAAOA,GAAjB,UACE,cAACM,GAAD,IACA,cAAC,EAAD,SAGJE,IDqGI,kBAAmBK,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.cde75ee6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyDBJxfLSKPEv-tY8spKJ-4CL3k0RRtHSOk\",\n  authDomain: \"cameraprice-f5e93.firebaseapp.com\",\n  projectId: \"cameraprice-f5e93\",\n  storageBucket: \"cameraprice-f5e93.appspot.com\",\n  messagingSenderId: \"216996043991\",\n  appId: \"1:216996043991:web:28e7940359a3b781b6e492\"\n};\n\nfirebase.initializeApp(config);\n\nexport const database = firebase.firestore();\nexport const storage = firebase.storage();\nexport const firebaseAuth = firebase.auth();\nexport { firebase };\n","import React from \"react\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseAuth } from \"../../utils/firebase\";\n\nconst Navbar = () => {\n  const history = useHistory();\n\n  const goTo = (path) => {\n    history.push(`/${path}`);\n  };\n  const logOut = async () => {\n    try {\n      await firebaseAuth.signOut();\n      history.push(\"/\");\n    } catch {\n      throw new Error(\"No se pudo cerrar sesión\");\n    }\n  };\n  return (\n    <AppBar>\n      <Toolbar>\n        <List>\n          <li onClick={() => goTo(\"home\")}>Scannear codigo</li>\n          <li onClick={() => goTo(\"historyCodes\")}>Historial de codigos</li>\n          <li onClick={() => goTo(\"generateCode\")}>Generar código</li>\n          <li onClick={logOut}>Cerrar sesión</li>\n        </List>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst List = styled.ul`\n  display: flex;\n  gap: 2rem;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  li {\n    list-style: none;\n    cursor: pointer;\n    height: 4rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport default Navbar;\n","import React from \"react\";\nimport Navbar from \"../../components/NavBar\";\nimport styled from \"styled-components\";\n\nconst Wrapper = (props) => {\n  return (\n    <>\n      <NavBarContainer>\n        <Navbar />\n      </NavBarContainer>\n      {props.children}\n    </>\n  );\n};\n\nconst NavBarContainer = styled.main`\n  height: 7rem;\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"../../components/Wrapper\";\nimport styled from \"styled-components\";\n\nconst Home = () => {\n  const openCameraAndGetPermissions = () => {};\n  return (\n    <>\n      <Wrapper>\n        <ContainerMain>\n          <button type=\"button\" onClick={openCameraAndGetPermissions}>\n            Escanear código de barras\n          </button>\n        </ContainerMain>\n      </Wrapper>\n    </>\n  );\n};\n\nconst ContainerMain = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 75px);\n  button {\n    width: 30rem;\n    height: 20rem;\n    background: #3e50b5;\n    color: white;\n    border: none;\n  }\n`;\n\nexport default Home;\n","const palette = {\n  primaryColors: \"#C6D57E\",\n  secondaryColor: \"#D57E7E\",\n  greenColor: \"#A2CDCD\",\n  yellowColor: \"#FFE1AF\",\n  grayColor: \"#E6E6E6\",\n  blueColor: \"#14279B\",\n  white: \"#fff\"\n};\n\nexport default palette;\n","export const authTypes = {\n  LOGIN: \"authoirze/LOGIN_IN\"\n};\n\nexport const authLogin = (user) => ({\n  type: authTypes.LOGIN,\n  payload: user\n});\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../utils/palette\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseAuth } from \"../../utils/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { authLogin } from \"../../redux/actions/_auth_actions\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    loader: false,\n    error: null\n  });\n\n  const history = useHistory();\n\n  const goToHome = () => {\n    history.push(`/home`);\n  };\n  const goToRegister = () => {\n    history.push(\"/register\");\n  };\n\n  const handleInputs = (e) => {\n    const { value, name } = e.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const loginInitial = async (e) => {\n    e.preventDefault();\n    firebaseAuth\n      .signInWithEmailAndPassword(state.email, state.password)\n      .then(() => {\n        firebaseAuth.currentUser.getIdTokenResult().then((idTokenResult) => {\n          const { user_id } = idTokenResult.claims;\n          const user = {\n            ...idTokenResult.claims,\n            uid: user_id\n          };\n          dispatch(authLogin(user));\n          setState({\n            ...state,\n            loader: false\n          });\n        });\n        goToHome();\n      })\n      .catch((err) => {\n        const errCode = err.code;\n        if (\n          errCode === \"auth/invalid-email\" ||\n          errCode === \"auth/wrong-password\"\n        ) {\n          setState({\n            ...state,\n            loader: false,\n            error: \"Correo o constraseña inválida\"\n          });\n        } else if (errCode === \"auth/user-not-found\") {\n          setState({\n            ...state,\n            loader: false,\n            error: \"Usuario inexistente\"\n          });\n        } else {\n          setState({\n            ...state,\n            loader: false,\n            error: \"Correo o constraseña inválida\"\n          });\n        }\n      });\n  };\n\n  return (\n    <ContainerMain>\n      <Form onSubmit={loginInitial}>\n        <h1>Bienvenido</h1>\n        {state.error}\n        <div>\n          <label htmlFor=\"\">Email</label>\n          <input\n            required\n            type=\"text\"\n            name=\"email\"\n            value={state.email}\n            onChange={handleInputs}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"\">Password</label>\n          <input\n            required\n            type=\"text\"\n            name=\"password\"\n            value={state.password}\n            onChange={handleInputs}\n          />\n        </div>\n        <span>\n          No tienes cuenta registrate{\" \"}\n          <strong onClick={goToRegister}>aqui</strong>\n        </span>\n        <button type=\"submit\">Iniciar sesion</button>\n      </Form>\n    </ContainerMain>\n  );\n};\n\nconst ContainerMain = styled.main`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Form = styled.form`\n  height: 50rem;\n  width: 50rem;\n  border: 1px solid;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  div {\n    display: flex;\n    flex-direction: column;\n    label {\n      font-size: 1.6rem;\n    }\n    input {\n      height: 4rem;\n      width: 20rem;\n    }\n  }\n  button {\n    margin-top: 1rem;\n    width: 15rem;\n    height: 4rem;\n    border: none;\n    background: ${palette.blueColor};\n    color: ${palette.white};\n  }\n  span,\n  strong {\n    font-size: 1.5rem;\n  }\n  strong {\n    cursor: pointer;\n  }\n`;\nexport default Login;\n","import React from \"react\";\nimport Wrapper from \"../../components/Wrapper\";\n\nconst HistoryCodes = () => {\n  return (\n    <Wrapper>\n      <h1>History codes</h1>\n    </Wrapper>\n  );\n};\n\nexport default HistoryCodes;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport palette from \"../../utils/palette\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseAuth, database } from \"../../utils/firebase\";\nimport dayjs from \"dayjs\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst Register = () => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    loader: false,\n    error: null\n  });\n\n  const history = useHistory();\n  const goToLoggin = () => {\n    history.push(\"/\");\n  };\n\n  const handleInputs = (e) => {\n    const { value, name } = e.target;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const registerInitial = async (e) => {\n    e.preventDefault();\n    setState({\n      ...state,\n      loader: true\n    });\n    try {\n      const response = await firebaseAuth.createUserWithEmailAndPassword(\n        state.email,\n        state.password\n      );\n\n      const createUserData = {\n        nameUser: state.name,\n        createdUser: dayjs().valueOf(),\n        idUser: response.user.uid,\n        email: state.email\n      };\n      await database\n        .collection(\"users\")\n        .doc(response.user.uid)\n        .set(createUserData);\n      setState({\n        ...state,\n        loader: false\n      });\n      history.push(`/home${response.user.uid}`);\n    } catch (err) {\n      setState({\n        ...state,\n        loader: false,\n        error: \"Ya existe un usuario con este correo\"\n      });\n    }\n  };\n\n  return (\n    <ContainerMain>\n      <Form onSubmit={registerInitial}>\n        <h1>Bienvenido</h1>\n        {state.error}\n        <div>\n          <label htmlFor=\"\">Nombre</label>\n          <input\n            required\n            type=\"text\"\n            name=\"name\"\n            value={state.name}\n            onChange={handleInputs}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"\">Email</label>\n          <input\n            required\n            type=\"text\"\n            name=\"email\"\n            value={state.email}\n            onChange={handleInputs}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"\">Password</label>\n          <input\n            required\n            type=\"text\"\n            name=\"password\"\n            value={state.password}\n            onChange={handleInputs}\n          />\n        </div>\n        <span>\n          ¿Ya tienes cuenta? Inicia sesión\n          <strong onClick={goToLoggin}> aqui</strong>\n        </span>\n        <button type=\"submit\" disabled={state.loader}>\n          {state.loader ? <ClipLoader /> : \"Registrarme\"}\n        </button>\n      </Form>\n    </ContainerMain>\n  );\n};\n\nconst ContainerMain = styled.main`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Form = styled.form`\n  height: 50rem;\n  width: 50rem;\n  border: 1px solid;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  div {\n    display: flex;\n    flex-direction: column;\n    label {\n      font-size: 1.6rem;\n    }\n    input {\n      height: 4rem;\n      width: 20rem;\n    }\n  }\n  button {\n    margin-top: 1rem;\n    width: 15rem;\n    height: 4rem;\n    border: none;\n    background: ${palette.blueColor};\n    color: ${palette.white};\n  }\n  span,\n  strong {\n    font-size: 1.5rem;\n  }\n  strong {\n    cursor: pointer;\n  }\n`;\nexport default Register;\n","import React, { useState } from \"react\";\nimport Wrapper from \"../../components/Wrapper\";\nimport QRCode from \"react-qr-code\";\nimport { SketchPicker } from \"react-color\";\nimport styled from \"styled-components\";\n\nconst Account = () => {\n  const [color, setColor] = useState(\"#000\");\n  const [text, setText] = useState(\"\");\n\n  const handleColor = (color) => {\n    setColor(color.hex);\n  };\n  const handleText = (e) => {\n    setText(e.target.value);\n  };\n  return (\n    <>\n      <Wrapper>\n        <ContainerMain>\n          <h1>Generar codigo</h1>\n          <div className=\"container-picker\">\n            <section>\n              <QRCode\n                value={text}\n                fgColor={color}\n                bgColor=\"#fff\"\n                level=\"M\"\n                title=\"My code\"\n              />\n            </section>\n            <section>\n              <SketchPicker color={color} onChange={handleColor} />\n            </section>\n          </div>\n          <input type=\"text\" onChange={handleText} value={text} />\n          <button type=\"button\">Guardar qr</button>\n        </ContainerMain>\n      </Wrapper>\n    </>\n  );\n};\n\nconst ContainerMain = styled.main`\n  height: calc(100vh - 70px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  .container-picker {\n    margin-top: 2rem;\n    padding: 1rem;\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 5rem;\n    section:first-child {\n      display: flex;\n      align-items: center;\n      justify-content: end;\n    }\n    section:last-child {\n      display: flex;\n      align-items: center;\n      justify-content: start;\n    }\n  }\n  input {\n    width: 50rem;\n    height: 4rem;\n    font-size: 2rem;\n  }\n  input:focus {\n    outline: none;\n  }\n  button {\n    width: 20rem;\n    height: 4rem;\n    border: none;\n    background: #3e50b5;\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nexport default Account;\n","import React from \"react\";\nimport { BarLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\n\nconst Loader = () => {\n  return (\n    <ContainerMain>\n      <BarLoader />\n    </ContainerMain>\n  );\n};\n\nconst ContainerMain = styled.main`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport default Loader;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register/register\";\nimport HistoryCodes from \"./pages/HistoryCodes/historyCodes\";\nimport Account from \"./pages/Account/Account\";\nimport { firebaseAuth } from \"./utils/firebase\";\nimport Loader from \"./components/Wrapper/Loader\";\nimport history from \"./utils/history\";\n\nfunction App() {\n  const [state, setState] = useState({\n    loader: true\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setState({\n        loader: false\n      });\n    }, 4000);\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        {state.loader ? (\n          <Loader />\n        ) : (\n          <>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/historyCodes\" component={HistoryCodes} />\n              <Route exact path=\"/generateCode\" component={Account} />\n            </Switch>\n          </>\n        )}\n      </BrowserRouter>\n    </>\n  );\n}\nexport default App;\n","import { authTypes } from \"../actions/_auth_actions\";\n\nconst INITIAL_STATE = {\n  user: {\n    status: true\n  }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case authTypes.LOGIN:\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authReducer from \"./reducers/_auth_reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      auth: authReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nconst GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    box-sizing: border-box;\n  }\n  html {\n    font-size: 62.5%\n  }\n`;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}